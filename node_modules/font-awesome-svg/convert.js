'use strict';

/* global phantom */


var fs = require('fs');
var webpage = require('webpage');
var system = require('system');

// Run tasks. A task is a function whose last argument is a callback.
function run(tasks, done) {
  if (tasks.length === 0) { return done(); }
  tasks[0][0].apply(null, tasks[0].slice(1).concat(function() { run(tasks.slice(1), done); }));
}


function convert(file, output, cb) {
  var page = webpage.create();
  var size = 64;
  if (system.args.length > 1) {
    size = (system.args[1]|0) || 64;
  }
  page.viewportSize = { width: size, height: size};

  page.open(file, function(status) {
    if (status !== 'success') {
      console.log(status, file);
      return cb();
    }
    console.log('render', output);
    page.render(output);
    page.close();
    cb();
  });
}

var RE = /(fa-[a-z0-9-]+)\.svg/i;
var tasks = fs.list('svg/')
.filter(function(filename) {
  return fs.isFile('svg/' + filename) && filename.match(RE);
})
.map(function(filename) {
  var base = filename.match(RE)[1];
  return [convert, 'svg/' + base + '.svg', 'png/' + base + '.png'];
});



run(tasks, function() { phantom.exit(); });
